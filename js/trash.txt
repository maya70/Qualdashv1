setupDrag: function(elmnt){
							var self = this;
							console.log(elmnt.id); 
							//$(elmnt.id).resizable(); 
							var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
							if (document.getElementById(elmnt.id + "Header")) {
							    /* if present, the header is where you move the DIV from:*/
							    document.getElementById(elmnt.id + "Header").onmousedown = dragMouseDown;
							  } else {
							    /* otherwise, move the DIV from anywhere inside the DIV:*/
							   // elmnt.onmousedown = dragMouseDown;
							  }
							function dragMouseDown(e) {
							    e = e || window.event;
							    // get the mouse cursor position at startup:
							    pos3 = e.clientX;
							    pos4 = e.clientY;
							    document.onmouseup = closeDragElement;
							    // call a function whenever the cursor moves:
							    document.onmousemove = elementDrag;
							  }

							 function elementDrag(e) {
							    e = e || window.event;
							    // calculate the new cursor position:
							    pos1 = pos3 - e.clientX;
							    pos2 = pos4 - e.clientY;
							    pos3 = e.clientX;
							    pos4 = e.clientY;
							    // set the element's new position:
							    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
							    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
							  }
							   function closeDragElement() {
								    /* stop moving when mouse button is released:*/
								    document.onmouseup = null;
								    document.onmousemove = null;
								  }
						}

// resize of single variable bar chart: 
function resize() {
							if(!self.cat)
							{	
							console.log("RESIZE CALLED 22 ");

							var svgw = parseInt(d3.select("#card"+viewId).style("width")) * 0.9,
								svgh = parseInt(d3.select("#card"+viewId).style("height")) * 0.9;

							// update svg width and height
							self.svg = d3.select("#mainsvg"+viewId); 

							self.svg.attr("width", svgw)
												.attr("height", svgh);


						 	// update the range of the scale with new width/ height
							var width = svgw - margin.right - margin.left, 
								height = svgh - margin.top - margin.bottom; 

							x.rangeRound([0, width]).padding(0.1);
							y.range([(height), 0]); 

							////console.log(self.svg.selectAll("*"));
							self.svg.select(".x.axis")
							.attr("transform", "translate("+ 0+"," + (height + margin.top ) + ")")
							      .call(d3.axisBottom(x))
									.selectAll("text")	
								        .style("text-anchor", "end")
								        .attr("dx", "-.8em")
								        .attr("dy", ".15em")
								        .attr("transform", "rotate(-65)");
							
							

							self.svg.select(".y.axis")
									.call(d3.axisLeft(y).ticks(5, "s"))
							      	.attr("transform", "translate(0,"+ margin.top+")");
							self.svg.selectAll(".bar")
								.attr("x", function(d) { 
									return x(d.date); })
							      .attr("y", function(d) { 
							      	return y(d.number)+ margin.top; })
							      .attr("width", x.bandwidth())
							      .attr("height", function(d) { return height  - y(d.number); })
							}
						}
						 
						$("#card"+viewId).resize(function(e){
							resize(); 
						});
						//d3.select("#card"+viewId).on("resize", resize); 
						//resize();


/////////////////////////////////////////////////////////////////////////
// resize for drawCatBar()
//////////////////////////
function resize() {
							//console.log("RESIZE CALLED");
							var svgw = parseInt(d3.select("#card"+viewId).style("width")) * 0.9,
								svgh = parseInt(d3.select("#card"+viewId).style("height")) * 0.9;

							// update svg width and height
							self.svg = d3.select("#mainsvg"+viewId+"_"+iter); 

							self.svg.attr("width", svgw)
												.attr("height", svgh);


						 	// update the range of the scale with new width/ height
							var width = svgw - margin.right - margin.left, 
								height = svgh - margin.top - margin.bottom; 

							x.rangeRound([0, width]).padding(0.1);
							y.range([height, 0]); 


							self.svg.select(".x.axis")
							.attr("transform", "translate("+ 0+"," + (height + margin.top ) + ")")
							      .call(d3.axisBottom(x))
									.selectAll("text")	
								        .style("text-anchor", "end")
								        .attr("dx", "-.8em")
								        .attr("dy", ".15em")
								        .attr("transform", "rotate(-65)");
							
							self.svg.select(".y.axis")
									.call(d3.axisLeft(y).ticks(5, "s"))
							      	.attr("transform", "translate(0,"+ margin.top+")");

							////console.log(self.svg.selectAll("g").selectAll(".bar"));
							/*self.svg.selectAll("g").selectAll(".bar")
								.attr("x", function(d, i) { return x(i); })
							      .attr("y", function(d) { 
							      	return y(d.number)+ margin.top; })
							      .attr("width", x.bandwidth())
							      .attr("height", function(d) { return height  - y(d.number); })*/
							     changed(); 

						}
						